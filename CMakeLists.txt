cmake_minimum_required(VERSION 3.10)
project(estimator)

set(CMAKE_BUILD_TYPE "Debug")
set(CMAKE_CXX_STANDARD 17)

find_package(Armadillo REQUIRED)

if(Armadillo_FOUND)
    message(STATUS "------------------------------------")
    message(STATUS "Armadillo is FOUND:")
    message(STATUS "include: ${ARMADILLO_INCLUDE_DIRS}")
    message(STATUS "libraries: ${ARMADILLO_LIBRARIES}")
    message(STATUS "version: ${ARMADILLO_VERSION_STRING}")
    message(STATUS "------------------------------------")
else(Armadillo_FOUND)
    message("Armadillo is NOT found:")
endif(Armadillo_FOUND)

include(cmake/Findpybind11.cmake)
include(cmake/FindGTest.cmake)

include_directories(${CMAKE_CURRENT_SOURCE_DIR}/src)

if (pybind11_FOUND)
    message(STATUS "-----------------")
    message(STATUS "PyBind11 is found")
    message(STATUS "-----------------")
    add_subdirectory(bindpy)
else (pybind11_FOUND)
    message(STATUS "----------------------")
    message(STATUS "PyBind11 is not found!")
    message(STATUS "----------------------")
endif (pybind11_FOUND)

if (GTest_FOUND)
    message(STATUS "---------------------")
    message(STATUS "Google Test is found!")
    message(STATUS "---------------------")
    enable_testing()
    add_subdirectory(test)
else(GTest_FOUND)
    message(STATUS "-------------------------")
    message(STATUS "Google Test is not found!")
    message(STATUS "-------------------------")
endif(GTest_FOUND)
